using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Hashing
{
    class Program
    {
        static void Main(string[] args)
        {
            //int[] arr = Array.ConvertAll("16 10 1 16 4 4 15 12 3 6 15 4 3 13 6 12 14 7 15 2 9 3 6 15 6 9 5 15 12 1 16 11 1 7 17 4 11 5 15 4 10 3 7 3 7 4 14 11 10 3 12 10 5 1 7 1 17 11 6 11 11 5 4 3 2 11 6 3 15 12 15 15 14 4 1 11 15 5 5 16 15 16 8 2 7 5 3 6 15 8 17 16 3 11 1 13 5 15 15 10 17 12 8 4 7 16 15 12 11 2 1 9 8 16 1 15 3 11 3 8 10 10 7 12 4 15 15 16 3 4 16 2 6 14 6 3 12 11 15 14 12 6 5 10 5 5 7 7 16 1 15 16 1 12 1 12 17 16 10 3 2 17 12 7 13 17 1 8 1 15 12 3 3 16 13 15 11 2 5 17 10 10 15 11 12 16 5 11 14 6 13 6 5 16 3 17 15 3 15 16 8 9 1 2 15 4 16 9 14 11 16 6 11 14 7 5 3 3 16 7 8 2 12 3 17 5 10 6 16 8 12 14 7 3 6 13 7 5 12 3 6 10 16 17 14 6 12 16 8 10 5 6 3 7 8 2 3 17 15 1 15 9 5 13 3 11 8 9 6 10 2 11 2 17 1 16 13 13 5 3 13 10 16 15 7 6 17 9 14 5 17 2 14 5 14 16 6 12 15 11 4 16 4 14 6 13 3 2 8 7 12 3 7 2 1 14 15 8 13 11 12 4 4 16 16 8 5 4 3 2 14 14 8 8 1 5 3 3 14 1 1 16 4 7 17 12 11 15 2 7 16 4 10 2 11 8 10 15 2 3 8 15 7 6 13 8 10 16 1 6 7 1 13 10 8 12 12 1 9 4 15 8 8 15 17 1 13 17 6 14 2 13 2 17 10 15 7 2 4 15 16 10 16 11 11 14 5 5 5 5 9 3 3 7 17 10 15 13 10 3 17 11 7 2 10 16 16 7 8 10 5 6 2 11 7 3 7 3 8 11 7 7 4 17 13 12 9 10 15 1 3 14 3 9 15 3 7 4 10 15 13 5 11 6 6 1 8 12 3 6 13 17 12 17 16 15 2 15 7 16 16 10 12 9 9 1 11 16 4 11 4 8 15 14 4 3 5 2 5 7 8 1 14 10 8 12 8 9 10 5 7 16 14 9 7 6 9 17 12 4 11 15 2 16 2 5 10 7 6 5 4 4 13 1 14 3 3 12 2 3 16 16 9 4 16 15 17 7 6 2 1 7 7 2 13 8 14 13 5 11 1 17 14 13 17 1 7 10 12 16 4 2 15 12 13 13 10 12 10 6 13 11 12 2 3 15 17 8 11 5 1 11 4 5 14 11 6 3 11 8 2 14 17 7 9 12 10 9 14 2 14 17 3 16 9 14 4 9 4 14 4 12 15 15 16 3 16 12 5 9 3 14 6 10 11 5 5 3 13 9 13 17 9 15 6 17 2 9 16 5 14 2 16 2 7 6 4 5 17 17 5 2 4 1 3 15 5 7 8 8 6 3 15 14 9 11 14 10 10 3 6 6 5 12 8 2 17 2 7 17 1 11 9 5 2 11 2 6 8 9 4 14 3 1 1 11 2 5 11 11 8 16 8 12 11 6 13 1 7 10 8 8 11 17 12 12 1 4 8 17 3 11 4 5 2 4 6 3 9 17 14 16 6 4 1 7 9 4 8 6 14 15 13 15 5 15 10 14 9 8 13 12 2 16 7 3 2 4 14 1 11 1 16 16 4 16 6 3 11 4 8 7 9 12 12 14 9 12 10 1 3 13 3 4 2 17 14 3 3 1 4 13 1 10 3 4 17 8 14 10 11 5 7 2 16 1 6 15 13 6 6 15 9 16 9 10 16 13 13 9 14 7 13 14 16 15 9 6 13 5 15 14 17 4 6 6 5 3 4 8 8 9 5 17 8 4 17 14 16 12 13 12 9 8 9 16 13 17 4 8 12 2 12 12 13 1 17 17 3 3 7 1 3 2 8 1 5 8 5 4 10 17 6 10 8 14 8 11 4 2 10 16 11 4 1 7 12 17 6 5 11 4 6 4 13 4 4 1 2 8 12 12 7 17 12 5 5 2 16 16 11 8 5 5 2 5 11 14 13 7 1 6 1 14 9 14 9 3 5 10 1 16 12 7 6 6 3 1 15 9 17 9 7 4 13 8 17 6 12 12 3 4 17 4 17 16 17 16 9 4 9 9 10 11 15 6 17 8 7 14 16 14 13 5 8 8 4 7 4 15 1 7 1 8 1 9 14 17 7 5 11 6 13 11 17 2 7 7 9 13 3 16 17 7 11 8 14 14 14 9 3 6 6 3 13 6 11 1 5 9 5 6 14 1 16 13 10 13 10 1 9 4 7 16 10 1 6 14 5 11 5 7 16 10 1 2 15 2 2 10 10 15 15 7 6 4 10 15 17 3 6 16 6 13 5 6 4 11 2 8 12 7 6 10 7 6 2 5 7 12 5 8 9 11 14 5 5 14 2 12 7 7 1 3 2 6 8 13 16 1 4 10 7 17 10 4 5 2 16 2 13 4 9 12 14 13 16 9 1 8 4 7 15 4 1 7 9 16 3 15 16 14 7 13 13 7 17 8 9 15 17 12 9 9 15 13 12 4 5 12 12 8 10 17 2 10 6 11 16 16 8 15 12 6 1 15 12 8 13 3 6 13 6 5 12 3 1 6 6 5 1 17 3 10 16 4 10 13 5 8 11 13 13 14 9 14 2 3 12 15 14 17 1 2 13".Split(' '), int.Parse);
            //count(arr, 35);

            //string[] srr = "act cat tac god dog".Split(' ');
            //GroupAnagrams.fnCountSystem(srr);

            LargestFibonacciSubsequence.fnFiboSubsequence(new int[] { 0, 2, 8, 5, 2, 1, 4, 13, 23 });
            Console.Read();
        }

        private static void count(int[] arr, int n)
        {
            int[][] numMatrix = new int[n][];

            Dictionary<int, int> dict = new Dictionary<int, int>();
            int k = 0;
            for (int i = 0; i < n; i++)
            {
                numMatrix[i] = new int[n];
                for (int j = 0; j < n; j++)
                {
                    numMatrix[i][j] = arr[k];
                    k++;
                }
            }

            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    if (i == 0)
                    {
                        if (!dict.ContainsKey(numMatrix[i][j]))
                            dict.Add(numMatrix[i][j], 1);
                    }
                    else
                    {
                        if (dict.ContainsKey(numMatrix[i][j]) && dict[numMatrix[i][j]] == i)
                        {
                            dict[numMatrix[i][j]] = i + 1;
                        }
                    }
                }
            }

            int count = 0;

            foreach (var item in dict)
            {
                if (item.Value >= n)
                    count++;
            }

            Console.WriteLine(count);
        }
    }
}
